{{- $isDedicatedMaster := eq $myRole "elasticsearch-master" }}

{{- $leavingMasters := getvs "/deleting-hosts/es_master_node/*/ip" }}
{{- $dedicatedMasters := getvs "/hosts/es_master_node/*/ip" }}
masterNodes="$(echo "
{{- range $dedicatedMasters }}
{{- if not ($leavingMasters | filter .) }}
{{ . }}
{{- end }}
{{- end }}
" | xargs | tr ' ' ,)"
{{- $mastersCount := sub (len $dedicatedMasters) (len $leavingMasters) }}
{{- $masterQuorum := add (div $mastersCount 2) 1 }}

{{- $leavingGenericNodes := getvs "/deleting-hosts/es_node*/*/ip" }}
{{- $genericNodes := getvs "/hosts/es_node*/*/ip" }}
genericNodes="$(echo "
{{- range $genericNodes }}
{{- if not ($leavingGenericNodes | filter .) }}
{{ . }}
{{- end }}
{{- end }}
" | xargs | tr ' ' ,)"
{{- $genNodesCount := sub (len $genericNodes) (len $leavingGenericNodes) }}
{{- $genericQuorum := add (div $genNodesCount 2) 1 }}

discoveryHosts="${masterNodes:-$genericNodes}"

{{- $joiningMasters := getvs "/adding-hosts/es_master_node/*/ip" }}
{{- if $joiningMasters | filter $myIp }}
  {{- if gt $mastersCount (len $joiningMasters) }}
    discoveryHosts="$(echo "
      {{- range $dedicatedMasters }}
        {{- if (not ($joiningMasters | filter .)) }}
          {{ . }}
        {{- end }}
      {{- end }}
    " | xargs | tr ' ' ,)"
  {{- else }}
    discoveryHosts="$genericNodes"
  {{- end }}
{{- end }}

dataDirs="$(ls -d /data* | xargs echo)"
dataDirs="$(echo "${dataDirs:-/data /data2 /data3} " | sed 's# #/elasticsearch/data, #g')"

scriptTypes="
{{- range ls "/env" | filter "(inline|stored|file)" }}
{{ if eq (getv (printf "/env/%s" .)) "true" }}{{ replace . "script." "" -1 }}{{ end }}
{{- end }}
"
scriptTypes="$(echo $scriptTypes)"
scriptTypes="${scriptTypes// /,}"

scriptContexts="
{{- range ls "/env" | filter "(aggs|search|update)" }}
{{ if eq (getv (printf "/env/%s" .)) "true" }}{{ replace . "script." "" -1 }}{{ end }}
{{- end }}
"
scriptContexts="$(echo $scriptContexts)"
scriptContexts="${scriptContexts// /,}"

cat > /opt/app/conf/elasticsearch/elasticsearch.yml << ES_YML_EOF
action.destructive_requires_name: {{ getv "/env/action.destructive_requires_name" "true" }}
bootstrap.memory_lock: true

cluster.name: {{ getv "/cluster/cluster_id" }}

{{- if not (getvs "/env/es_additional_line*" | filter "cluster.routing.allocation.awareness.attributes:.*") }}
cluster.routing.allocation.awareness.attributes: zone
{{- end }}

discovery.zen.fd.ping_interval: 1s
discovery.zen.fd.ping_retries: 3
discovery.zen.fd.ping_timeout: 30s
discovery.zen.minimum_master_nodes: {{ if $mastersCount }}{{ $masterQuorum }}{{ else }}{{ $genericQuorum }}{{ end }}
discovery.zen.no_master_block: {{ getv "/env/discovery.zen.no_master_block" "write" }}
discovery.zen.ping_timeout: 3s
discovery.zen.ping.unicast.hosts: [ ${discoveryHosts/{{ $myIp }},/} ]

{{ if $mastersCount -}}
gateway.expected_data_nodes: {{ $genNodesCount }}
gateway.expected_master_nodes: {{ $mastersCount }}
gateway.recover_after_data_nodes: {{ max $genericQuorum (sub $genNodesCount 2) }}
gateway.recover_after_master_nodes: {{ max $masterQuorum (sub $mastersCount 2) }}
{{ else -}}
gateway.expected_nodes: {{ $genNodesCount }}
gateway.recover_after_nodes: {{ max $genericQuorum (sub $genNodesCount 2) }}
{{ end -}}
gateway.recover_after_time: {{ getv "/env/gateway.recover_after_time" "5m" }}

http.cors.allow-origin: "{{ getv "/env/http.cors.allow-origin" "" }}"
http.cors.enabled: {{ getv "/env/http.cors.enabled" "false" }}
http.port: 9200

indices.fielddata.cache.size: {{ getv "/env/indices.fielddata.cache.size" "90%" }}
indices.memory.index_buffer_size: {{ getv "/env/indices.memory.index_buffer_size" "10%" }}
indices.queries.cache.size: {{ getv "/env/indices.queries.cache.size" "10%" }}
indices.requests.cache.size: {{ getv "/env/indices.requests.cache.size" "1%" }}

network.host: {{ $myIp }}

{{- if not (getvs "/env/es_additional_line*" | filter "node.attr.data:.*") }}
{{- if not $isDedicatedMaster }}
node.attr.data: "{{ getv "/env/node.attr.data" "hot" }}"
{{- end }}
{{- end }}

{{- if not (getvs "/env/es_additional_line*" | filter "node.attr.zone:.*") }}
node.attr.zone: {{ getv "/host/zone" (getv "/cluster/zone") }}
{{- end }}

node.data: {{ not $isDedicatedMaster }}
node.ingest: {{ not $isDedicatedMaster }}
node.master: {{ or $isDedicatedMaster (not $mastersCount) }}
{{- $groupsMap := map "2" "n2" "3" "n3" "master" "m" }}
node.name: {{ getv "/cluster/cluster_id" }}{{ range split $myRole "-" | filter "2|3|master" }}-{{ index $groupsMap . }}{{ end }}-{{ getv "/host/sid" }}

path.data: [ $dataDirs ]
path.logs: /data/elasticsearch/logs
path.repo: {{ getv "/env/path.repo" "[]" }}

{{- if not (getvs "/env/es_additional_line*" | filter "reindex.remote.whitelist:.*") }}
reindex.remote.whitelist: "{{ getv "/env/reindex.remote.whitelist" "" }}"
{{- end }}
repositories.url.allowed_urls: {{ getv "/env/repositories.url.allowed_urls" "[]" }}

script.allowed_contexts: ${scriptContexts:-none}
script.allowed_types: ${scriptTypes:-none}

{{- range getvs "/env/es_additional_line*" }}
{{ . }}
{{- end }}
ES_YML_EOF

