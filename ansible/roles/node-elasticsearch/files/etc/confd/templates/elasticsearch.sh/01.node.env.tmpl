{{- $rolesMap := map "es_node" "elasticsearch-1" "es_node_2" "elasticsearch-2" "es_node_3" "elasticsearch-3" "es_master_node" "elasticsearch-master" }}
{{- $myRole := index $rolesMap (getv "/host/role") }}
{{- $mySid := getv "/host/sid" }}
{{- $myIp := getv "/host/ip" }}


allNodes="$(sort -V << ALL_NODES_EOF
{{- $groupsMap := map "2" "n2" "3" "n3" "master" "m" }}
{{- range $nodeRole := lsdir "/hosts" | filter "es_*" }}
{{- $joiningNodes := lsdir (printf "/adding-hosts/%s" $nodeRole) }}
{{- $leavingNodes := lsdir (printf "/deleting-hosts/%s" $nodeRole) }}
{{- range $instanceId := lsdir (printf "/hosts/%s" $nodeRole) }}
{{- if $joiningNodes | filter $instanceId }}
joining/
{{- else if $leavingNodes | filter $instanceId }}
leaving/
{{- else }}
stable/
{{- end }}
{{- $nodeRole }}/
{{- $instanceId }}/
{{- getv "/cluster/cluster_id" }}-
{{- range split $nodeRole "_" | filter "2|3|master" }}{{ index $groupsMap . }}-{{ end }}
{{- getv (printf "/hosts/%s/%s/sid" $nodeRole $instanceId) }}/
{{- getv (printf "/hosts/%s/%s/ip" $nodeRole $instanceId) }}
{{- end }}
{{- end }}
ALL_NODES_EOF
)"

flush > /opt/app/bin/envs/node.env << ES_ENV_EOF
NODE_CTL=elasticsearch
DATA_MOUNTS="/data"
MY_IP={{ $myIp }}
MY_ROLE={{ $myRole }}
{{- range gets "/env/appctl.*" }}
{{ replace (base .Key) "." "_" -1 | toUpper }}={{ .Value }}
{{- end }}
IS_MASTER={{ eq $myRole "elasticsearch-master" }}
HEAP_DUMP_PATH="{{ getv "/env/heap_dump_path" "/data/elasticsearch/dump" }}"
SERVICES="\$SERVICES elasticsearch/true/http:9200"
ROLE_NODES="$(echo "{{ join (getvs (printf "/hosts/%s/*/ip" (getv "/host/role"))) " " }}" | xargs -n1 | sort -V | xargs)"
JOINING_DATA_NODES="$(echo "$allNodes" | awk -F/ '$1~/^j/ && $2~/^es_node/ {print $5}' | sort -V | xargs)"
STABLE_DATA_NODES="$(echo "$allNodes" | awk -F/ '$1~/^s/ && $2~/^es_node/ {print $5}' | sort -V | xargs)"
LEAVING_DATA_NODES="$(echo "$allNodes" | awk -F/ '$1~/^l/ && $2~/^es_node/ {print $5}' | sort -V | xargs)"
JOINING_MASTER_NODES="$(echo "$allNodes" | awk -F/ '$1~/^j/ && $2~/^es_master/ {print $5}' | sort -V | xargs)"
STABLE_MASTER_NODES="$(echo "$allNodes" | awk -F/ '$1~/^s/ && $2~/^es_master/ {print $5}' | sort -V | xargs)"
LEAVING_MASTER_NODES="$(echo "$allNodes" | awk -F/ '$1~/^l/ && $2~/^es_master/ {print $5}' | sort -V | xargs)"
ES_ENV_EOF
